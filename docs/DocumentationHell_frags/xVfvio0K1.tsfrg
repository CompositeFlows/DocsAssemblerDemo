---
layout: null
permalink: /DocumentationHell_frags/xVfvio0K1.html
---


<!-- tsFragmentRenderComment {"id":"xVfvio0K1","topLevelMapKey":"sIhxfx02EB","mapKeyChain":"sIhxfx02EB","guideID":"xVfvgr216","guidePath":"c:/GitHub/MuddySpud/MuddySpud.github.io/tsmaps/DocumentationHell.tsmap","chartKey":"sIhxfx02EB","isLeaf":false,"options":[{"id":"xVfvj9278","order":1},{"id":"xVfvl721G","option":"What are Hallucinations?","order":2,"isAncillary":true}]} -->

## Designed for Developers, by Developers

The design of [Docs Assembler](https://marketplace.visualstudio.com/items?itemName=netoftrees.documentation-assembler) was driven by a fundamental need from teams like [HAL Robotics](https://hal-robotics.com): to have a powerful system that *respects developer workflows and sovereignty*. This isn't just a platform; it's a philosophy built on core principles that will feel immediately right:

*   **Familiarity & Control:** The entire system is built on the tools you already know and trust. Your documentation lives in Git repos, right alongside your code. Content is written in Markdown files, editable in any editor. Structure is defined in JSON files you can view and edit manually.
*   **Absolute Ownership:** You have physical possession of your documentation. It's your Markdown and JSON in your repo. You are never trapped in a subscription or held ransom by a SaaS platform.
*   **Zero Lock-In:** This is a critical feature. There are no consequences if you stop using [Docs Assembler](https://marketplace.visualstudio.com/items?itemName=netoftrees.documentation-assembler). Since it publishes to standard Markdown, you can uninstall the extension and your documentation is still perfectly usable, editable, and ready for any other static site generator. Your content is always yours.
*   **Seamless Publishing:** It’s designed to publish directly to [GitHub Pages](https://docs.github.com/en/pages), a platform developers already understand. Even Liquid scripts embedded in your Markdown work as expected.
*   **Built to Scale:** Like classes break down massive software systems, Docs Assembler's modules are designed to decompose enormous documentation sets into manageable, distributable units that different teams can own.
*   **Engineering Rigour:** It brings true software tooling to docs, with IntelliSense for variables, full validation before publish, and automatic handling of relative URLs that are defined as variables. This ensures any local files referenced by these URL variables are automatically discovered and copied to the publish folder, preventing broken links and ensuring robustness.

### How It Works: The Building Blocks

[Docs Assembler](https://marketplace.visualstudio.com/items?itemName=netoftrees.documentation-assembler) introduces key concepts that leverage this philosophy:

*   **Maps (.tsmap files):** These are the core building blocks - self-contained documentation modules (JSON files) that can be nested and composed, just like classes. Each Map can encapsulate anything from a simple procedure to an entire troubleshooting tutorial.
*   **Variables:** Define reusable text snippets for product names, common phrases, or URLs. Change the variable in one place, and that change propagates everywhere it’s referenced, eliminating an entire class of errors.
*   **Inheritance & Composition:** Build sophisticated guides from simple, reusable blocks. A change to a base “Map” automatically propagates to all guides that use it.
*   **Compile to Docs:** The system assembles these components on-the-fly into clean, standard Markdown (a process akin to compiling code), ready for GitHub Pages. The result? You **maintain a single source of truth for your documentation**, not a dozen fractured copies.

This structured knowledge base is also a foundation for the future. On top of it, you can deploy a guide front-end (as shown below) or a powerful conversational interface powered by a Graph-Augmented LLM. This AI can answer complex questions and generate precise guidance because it’s grounded in your organisation’s verifiable knowledge graph, not just passive text files. This grounding in an authoritative source of truth is the most effective method to dramatically reduce the hallucinations that plague even advanced LLMs.

This is the destination: turning trapped expertise into a structured, actionable, and authoritative frame-of-reference for your most complex operations.

