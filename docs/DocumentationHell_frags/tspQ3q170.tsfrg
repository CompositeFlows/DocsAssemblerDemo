---
layout: null
permalink: /DocumentationHell_frags/tspQ3q170.html
---


<!-- tsFragmentRenderComment {"id":"tspQ3q170","topLevelMapKey":"sIhxfx02EB","mapKeyChain":"sIhxfx02EB","guideID":"tspQ3q0JA","guidePath":"c:/GitHub/MuddySpud/MuddySpud.github.io/tsmaps/DocumentationHell.tsmap","chartKey":"sIhxfx02EB","isLeaf":false,"options":[{"id":"tspQ4F0ff","order":1},{"id":"tspQ9b020","option":"What are Decision Trees?","order":2,"isAncillary":true}]} -->

*This is an experimental port from a C# server/database application — to a GitHub repo/VS Code extension. A concept driven by transformational conversations with a robotics firm — [HAL Robotics](https://hal-robotics.com).*

*This site is built with [Docs Assembler](https://marketplace.visualstudio.com/items?itemName=netoftrees.documentation-assembler) and hosted on [GitHub Pages](https://docs.github.com/en/pages). You can view the source code and documentation structure in the [Docs Assembler Demo repo](https://github.com/CompositeFlows/DocsAssemblerDemo).*

# Tame Documentation Hell: Treat Your Docs Like Code

#### The Universal Problem: Trapped Expertise

Imagine you need to print a document from your laptop, but it doesn't work. The issue could lie with the laptop, the printer, or the Wi-Fi connection.

Without a technical expert on hand to guide you, it is nearly impossible to determine the necessary steps to diagnose the fault, identify its cause, and implement a fix easily. If you have some IT knowledge, you might try searching online. However, a great deal of the advice you find is irrelevant to your specific situation, leaving you to experiment for hours — a frustrating process. 

If you have no IT experience, you have no chance at all.

Now, scale this problem up to a company that builds complicated medical machines. How do they capture an engineer's diagnostic process to train others? Decision trees would be ideal, but for complex systems they explode into millions of unmanageable steps — 95% of them duplicates. Consequently, companies are forced to rely on 'flat' manuals which can't record the complex, branching, decision-making process; creating a single point of failure for the entire organisation.

The result is the same: organisations are fragile. They depend on a few experts, spend a fortune on training, and are one retirement away from a crisis. This is **documentation hell** — where critical knowledge is unrecorded, or scattered, and is impossibly difficult to use when it is needed most.

