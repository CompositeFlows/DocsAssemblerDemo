---
layout: null
permalink: /DocumentationHell_frags/tspQ621Pi.html
---


<!-- tsFragmentRenderComment {"id":"tspQ621Pi","topLevelMapKey":"sIhxfx02EB","mapKeyChain":"sIhxfx02EB","guideID":"tspQ3q0JA","guidePath":"c:/GitHub/MuddySpud/MuddySpud.github.io/tsmaps/DocumentationHell.tsmap","chartKey":"sIhxfx02EB","isLeaf":true,"options":[]} -->

##### This approach provides two key advantages:

1.  **One Source of Truth:** All image URLs are stored in a single, central variables file. To place an image in a step file, you simply reference the variable where the image should appear.
2.  **Easy Maintenance:** Changing an image requires just one update in the variables file. That change automatically propagates everywhere the variable is used, ensuring consistency, reducing errors, and saving hours of manual work.

### Full Diagnostics and Intellisense

**Docs Assembler** provides full language support:

##### Validation

The import statement is rigorously validated. The system checks that the file path points to an existing file and is free of errors.

##### Intellisense

As you type, you get code completion help to build both the import statement and the variable references correctly, dramatically reducing typos and errors.

You can easily navigate and understand your entire system. Right-clicking on any variable and selecting **'Go to Definition'** takes you directly to its source.

[<img class="nt-fr-mid-image" src="/assets/images/GoToVariableDefinition.png">](/assets/images/GoToVariableDefinition.png)

Here is the *imageLinks.tsvar* variable file itself. Notice how you can even reference variables *within* other variable definitions, creating a powerful, reusable hierarchy of content.

[<img class="nt-fr-mid-image" src="/assets/images/ImageLinksFile.png">](/assets/images/ImageLinksFile.png)

##### Diagnostics

The system actively monitors for errors in real-time. If you reference a variable that doesn't exist, or a local url doesn't point to an existing file, Docs Assembler immediately flags it with a clear diagnostic warning, preventing publication and guiding you to fix the issue.

###### Example:

The element below tries to reference the 'il.variable-does-not-exist'. Since this variable is not defined in the *imageLinks.tsvar* file, the system generates a precise error, ensuring content remains accurate and build processes aren't broken by missing references.

[<img class="nt-fr-mid-image" src="/assets/images/FullDiagnosticsAndIntellisense.png">](/assets/images/FullDiagnosticsAndIntellisense.png)

This is a simple but powerful example of how Docs Assembler applies software engineering principles — like encapsulation, single source of truth, and robust tooling — to documentation.

