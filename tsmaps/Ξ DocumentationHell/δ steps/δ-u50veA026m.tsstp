¬import el from "../../shared/externalLinks"
¬import euh from "../_shared/ExploreUnderTheHood"


### {{euh.howItWorksTitle}}

{{el.docsAssemblerExtension_link}} introduces key concepts that leverage this philosophy:

*   **Maps (.tsmap files):** These are the core building blocks - self-contained documentation modules (JSON files) that can be nested and composed, just like classes. Each Map can encapsulate anything from a simple procedure to an entire troubleshooting tutorial.
*   **Variables:** Define reusable text snippets for product names, common phrases, or URLs. Change the variable in one place, and that change propagates everywhere it’s referenced, eliminating an entire class of errors.
*   **Inheritance & Composition:** Build sophisticated guides from simple, reusable blocks. A change to a base “Map” automatically propagates to all guides that use it.
*   **Compile to Docs:** The system assembles these components on-the-fly into clean, standard Markdown (a process akin to compiling code), ready for GitHub Pages. The result? You **maintain a single source of truth for your documentation**, not a dozen fractured copies.

This structured knowledge base is also a foundation for the future. On top of it, you can deploy a guide front-end (as shown below) or a powerful conversational interface powered by a Graph-Augmented LLM. This AI can answer complex questions and generate precise guidance because it’s grounded in your organisation’s verifiable knowledge graph, not just passive text files. This grounding in an authoritative source of truth is the most effective method to dramatically reduce the hallucinations that plague even advanced LLMs.

This is the destination: turning trapped expertise into a structured, actionable, and authoritative frame-of-reference for your most complex operations.

